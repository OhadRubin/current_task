version: '3.8' # Specify a version that supports tty well, 3.8 is good

services:
  portr-client:
    build:
      context: ./backend
      # Make sure this Dockerfile correctly builds or copies the 'portr' binary
      # and places it in the PATH or defines it as the ENTRYPOINT.
      dockerfile: Dockerfile.portr
    env_file:
      - .env
    # Correct command structure: portr [global options] command [command options] [arguments]
    # Assuming api-server:8001 is the address:port INSIDE the docker network
    # that you want to expose via the tunnel.
    command: ["http", "8001", "-s", "direct-test"]
    depends_on:
      - api-server
    network_mode: host
    restart: unless-stopped # Good practice for services
    # --- Add these lines to allocate a TTY ---
    tty: true
    stdin_open: true # Often needed along with tty
    logging:
      driver: "json-file" # Default driver, explicitly stated for clarity
      options:
        max-size: "20m"  # Max size of a single log file (e.g., 20 Megabytes)
        max-file: "5"    # Max number of rotated log files to keep
    # --- End added lines ---

  api-server:
    build:
      context: ./backend
      dockerfile: Dockerfile.server
    volumes:
      - ./backend/server.py:/app/server.py
    # Expose the port to the network, but don't map to host unless needed for external access
    ports:
      - "8001:8001" # Uncomment only if you need direct host access to api-server
    command: python server.py
    restart: unless-stopped
    network_mode: host